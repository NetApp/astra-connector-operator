---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: backups.astra.netapp.io
spec:
  group: astra.netapp.io
  names:
    kind: Backup
    listKind: BackupList
    plural: backups
    singular: backup
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.state
      name: State
      type: string
    - jsonPath: .status.error
      name: Error
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: Backup is the Schema for the backups API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: BackupSpec defines the desired state of Backup
            properties:
              appVaultRef:
                description: Name of the AppVault to use as the target of the backup
                type: string
              applicationRef:
                description: Name of the Application to back up
                type: string
              reclaimPolicy:
                description: ReclaimPolicy defines what happens to a backup when released
                  from its claim. Valid options are Retain, Delete (default).
                type: string
              snapshotRef:
                description: Name of the Snapshot to use as the source of the Backup.
                  If not provided, a temporary Snapshot will be created and backed
                  up
                type: string
            required:
            - appVaultRef
            - applicationRef
            type: object
          status:
            description: BackupStatus defines the observed state of Backup
            properties:
              appArchivePath:
                description: AppArchivePath is the path where the backup was archived
                  in the AppVault.
                type: string
              completionTimestamp:
                description: CompletionTimestamp records the time the Backup completed.
                  The server's time is used for CompletionTimestamps
                format: date-time
                nullable: true
                type: string
              conditions:
                description: Each Condition contains details for one aspect of the
                  current state of the Backup.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              error:
                description: Error indicates the most recent error that has occurred.
                  The error may not be permanent, so progress may continue after temporarily
                  seeing an error.
                type: string
              postBackupExecHooksRunResults:
                description: PostBackupExecHooksRunResults contains the results of
                  executing hooks during the post/backup stage/action
                items:
                  properties:
                    completionTimestamp:
                      description: CompletionTimestamp the time the exec hook run
                        was finished regardless of failures
                      format: date-time
                      type: string
                    containerImage:
                      description: ContainerImage the image of the container the exec
                        hook is run on
                      type: string
                    containerName:
                      description: ContainerName the name of the container the exec
                        hook is run on
                      type: string
                    execHookRef:
                      description: ExecHookRef reference to the ExecHook being run
                      type: string
                    execHookUID:
                      description: ExecHookUID UID of the ExecHook being run
                      type: string
                    failures:
                      description: Failures list of failures that may occur when attempting
                        to run the exec hook
                      items:
                        description: Failure - most of this data is used for posting
                          events and notifications
                        properties:
                          error:
                            description: Error if a golang error was produced during
                              the process of running an exec hook
                            type: string
                          exitCode:
                            description: ExitCode if the script was executed but returned
                              a non-zero exit code it is captured here. Note that
                              customers can define their own exit code with special
                              meanings to them
                            type: integer
                          isExecError:
                            description: IsExecError this indicates that the script
                              itself returned an error vs an error in other parts
                              of the process such as copying the script onto the container
                            type: boolean
                          isTimeout:
                            description: IsTimeout indicates that the exec hook took
                              too long and was abandoned, this is parity with Astra
                            type: boolean
                          stderr:
                            description: Stderr the stderr captured when executing
                              the script
                            type: string
                          timeoutMinutes:
                            description: TimeoutMinutes indicates the amount of time
                              that was given to the exec hook to run. In astra it
                              is used for Activity/Event/Notification messages
                            type: integer
                        required:
                        - isExecError
                        - isTimeout
                        type: object
                      type: array
                    jobName:
                      description: JobName name of the job created to run an execution
                        hook
                      type: string
                    namespace:
                      description: Namespace the namespace from the target application
                        where the container is located
                      type: string
                    podName:
                      description: PodName the name of the pod where the exec hook
                        will be run
                      type: string
                    podUID:
                      description: PodUID the uid of the pod where the exec hook will
                        be run
                      type: string
                    startTimestamp:
                      description: StartedTimestamp the time the exec hook started
                        running
                      format: date-time
                      type: string
                  required:
                  - containerImage
                  - containerName
                  - execHookRef
                  - execHookUID
                  - namespace
                  - podName
                  - podUID
                  type: object
                type: array
              postSnapshotExecHooksRunResults:
                description: PostSnapshotExecHooksRunResults contains the results
                  of executing hooks during the post/snapshot stage/action
                items:
                  properties:
                    completionTimestamp:
                      description: CompletionTimestamp the time the exec hook run
                        was finished regardless of failures
                      format: date-time
                      type: string
                    containerImage:
                      description: ContainerImage the image of the container the exec
                        hook is run on
                      type: string
                    containerName:
                      description: ContainerName the name of the container the exec
                        hook is run on
                      type: string
                    execHookRef:
                      description: ExecHookRef reference to the ExecHook being run
                      type: string
                    execHookUID:
                      description: ExecHookUID UID of the ExecHook being run
                      type: string
                    failures:
                      description: Failures list of failures that may occur when attempting
                        to run the exec hook
                      items:
                        description: Failure - most of this data is used for posting
                          events and notifications
                        properties:
                          error:
                            description: Error if a golang error was produced during
                              the process of running an exec hook
                            type: string
                          exitCode:
                            description: ExitCode if the script was executed but returned
                              a non-zero exit code it is captured here. Note that
                              customers can define their own exit code with special
                              meanings to them
                            type: integer
                          isExecError:
                            description: IsExecError this indicates that the script
                              itself returned an error vs an error in other parts
                              of the process such as copying the script onto the container
                            type: boolean
                          isTimeout:
                            description: IsTimeout indicates that the exec hook took
                              too long and was abandoned, this is parity with Astra
                            type: boolean
                          stderr:
                            description: Stderr the stderr captured when executing
                              the script
                            type: string
                          timeoutMinutes:
                            description: TimeoutMinutes indicates the amount of time
                              that was given to the exec hook to run. In astra it
                              is used for Activity/Event/Notification messages
                            type: integer
                        required:
                        - isExecError
                        - isTimeout
                        type: object
                      type: array
                    jobName:
                      description: JobName name of the job created to run an execution
                        hook
                      type: string
                    namespace:
                      description: Namespace the namespace from the target application
                        where the container is located
                      type: string
                    podName:
                      description: PodName the name of the pod where the exec hook
                        will be run
                      type: string
                    podUID:
                      description: PodUID the uid of the pod where the exec hook will
                        be run
                      type: string
                    startTimestamp:
                      description: StartedTimestamp the time the exec hook started
                        running
                      format: date-time
                      type: string
                  required:
                  - containerImage
                  - containerName
                  - execHookRef
                  - execHookUID
                  - namespace
                  - podName
                  - podUID
                  type: object
                type: array
              preBackupExecHooksRunResults:
                description: PreBackupExecHooksRunResults contains the results of
                  executing hooks during the pre/backup stage/action
                items:
                  properties:
                    completionTimestamp:
                      description: CompletionTimestamp the time the exec hook run
                        was finished regardless of failures
                      format: date-time
                      type: string
                    containerImage:
                      description: ContainerImage the image of the container the exec
                        hook is run on
                      type: string
                    containerName:
                      description: ContainerName the name of the container the exec
                        hook is run on
                      type: string
                    execHookRef:
                      description: ExecHookRef reference to the ExecHook being run
                      type: string
                    execHookUID:
                      description: ExecHookUID UID of the ExecHook being run
                      type: string
                    failures:
                      description: Failures list of failures that may occur when attempting
                        to run the exec hook
                      items:
                        description: Failure - most of this data is used for posting
                          events and notifications
                        properties:
                          error:
                            description: Error if a golang error was produced during
                              the process of running an exec hook
                            type: string
                          exitCode:
                            description: ExitCode if the script was executed but returned
                              a non-zero exit code it is captured here. Note that
                              customers can define their own exit code with special
                              meanings to them
                            type: integer
                          isExecError:
                            description: IsExecError this indicates that the script
                              itself returned an error vs an error in other parts
                              of the process such as copying the script onto the container
                            type: boolean
                          isTimeout:
                            description: IsTimeout indicates that the exec hook took
                              too long and was abandoned, this is parity with Astra
                            type: boolean
                          stderr:
                            description: Stderr the stderr captured when executing
                              the script
                            type: string
                          timeoutMinutes:
                            description: TimeoutMinutes indicates the amount of time
                              that was given to the exec hook to run. In astra it
                              is used for Activity/Event/Notification messages
                            type: integer
                        required:
                        - isExecError
                        - isTimeout
                        type: object
                      type: array
                    jobName:
                      description: JobName name of the job created to run an execution
                        hook
                      type: string
                    namespace:
                      description: Namespace the namespace from the target application
                        where the container is located
                      type: string
                    podName:
                      description: PodName the name of the pod where the exec hook
                        will be run
                      type: string
                    podUID:
                      description: PodUID the uid of the pod where the exec hook will
                        be run
                      type: string
                    startTimestamp:
                      description: StartedTimestamp the time the exec hook started
                        running
                      format: date-time
                      type: string
                  required:
                  - containerImage
                  - containerName
                  - execHookRef
                  - execHookUID
                  - namespace
                  - podName
                  - podUID
                  type: object
                type: array
              preSnapshotExecHooksRunResults:
                description: PreSnapshotExecHooksRunResults contains the results of
                  executing hooks during the pre/snapshot stage/action
                items:
                  properties:
                    completionTimestamp:
                      description: CompletionTimestamp the time the exec hook run
                        was finished regardless of failures
                      format: date-time
                      type: string
                    containerImage:
                      description: ContainerImage the image of the container the exec
                        hook is run on
                      type: string
                    containerName:
                      description: ContainerName the name of the container the exec
                        hook is run on
                      type: string
                    execHookRef:
                      description: ExecHookRef reference to the ExecHook being run
                      type: string
                    execHookUID:
                      description: ExecHookUID UID of the ExecHook being run
                      type: string
                    failures:
                      description: Failures list of failures that may occur when attempting
                        to run the exec hook
                      items:
                        description: Failure - most of this data is used for posting
                          events and notifications
                        properties:
                          error:
                            description: Error if a golang error was produced during
                              the process of running an exec hook
                            type: string
                          exitCode:
                            description: ExitCode if the script was executed but returned
                              a non-zero exit code it is captured here. Note that
                              customers can define their own exit code with special
                              meanings to them
                            type: integer
                          isExecError:
                            description: IsExecError this indicates that the script
                              itself returned an error vs an error in other parts
                              of the process such as copying the script onto the container
                            type: boolean
                          isTimeout:
                            description: IsTimeout indicates that the exec hook took
                              too long and was abandoned, this is parity with Astra
                            type: boolean
                          stderr:
                            description: Stderr the stderr captured when executing
                              the script
                            type: string
                          timeoutMinutes:
                            description: TimeoutMinutes indicates the amount of time
                              that was given to the exec hook to run. In astra it
                              is used for Activity/Event/Notification messages
                            type: integer
                        required:
                        - isExecError
                        - isTimeout
                        type: object
                      type: array
                    jobName:
                      description: JobName name of the job created to run an execution
                        hook
                      type: string
                    namespace:
                      description: Namespace the namespace from the target application
                        where the container is located
                      type: string
                    podName:
                      description: PodName the name of the pod where the exec hook
                        will be run
                      type: string
                    podUID:
                      description: PodUID the uid of the pod where the exec hook will
                        be run
                      type: string
                    startTimestamp:
                      description: StartedTimestamp the time the exec hook started
                        running
                      format: date-time
                      type: string
                  required:
                  - containerImage
                  - containerName
                  - execHookRef
                  - execHookUID
                  - namespace
                  - podName
                  - podUID
                  type: object
                type: array
              progress:
                description: Used to internally track progress through the backup
                properties:
                  volumeBackups:
                    description: Progress of the individual volume backups, one for
                      each VolumeSnapshot in the source Snapshot
                    items:
                      properties:
                        completionTimestamp:
                          description: CompletionTimestamp records the time the volume
                            backup completed. The server's time is used for CompletionTimestamps
                          format: date-time
                          nullable: true
                          type: string
                        pvcUid:
                          description: k8s UID of the source app PVC
                          type: string
                        resticRepositoryPath:
                          description: Restic repository location (specified in the
                            same format as the "-r" option of the restic CLI)
                          type: string
                        resticSnapshotID:
                          description: ID of the Restic snapshot created to represent
                            this backup
                          type: string
                        resticVolumeBackupCompleted:
                          description: Set to true when the ResticVolumeBackup has
                            completed successfully
                          type: boolean
                        resticVolumeBackupCreated:
                          description: Set to true when the ResticVolumeBackup for
                            the VolumeSnapshot has been created
                          type: boolean
                        sourceVolumeSnapshot:
                          description: Namespaced name of the source VolumeSnapshot
                            to be backed up
                          properties:
                            name:
                              type: string
                            namespace:
                              type: string
                          required:
                          - name
                          - namespace
                          type: object
                        volumeSnapshotContentCopyName:
                          description: Name of the temporary copy of the VolumeSnapshotContent
                          type: string
                        volumeSnapshotCopied:
                          description: Set to true when the temporary copies of the
                            VolumeSnapshot and VolumeSnapshotContent have been created
                          type: boolean
                        volumeSnapshotCopyDeleted:
                          description: Set to true when the temporary copies of the
                            VolumeSnapshot and VolumeSnapshotContent have been deleted
                          type: boolean
                        volumeSnapshotCopyName:
                          description: Name of the temporary copy of the VolumeSnapshot
                          type: string
                        volumeSnapshotCopyReadyToUse:
                          description: Set to true when the temporary copy of the
                            VolumeSnapshot is ready to use
                          type: boolean
                      required:
                      - resticVolumeBackupCompleted
                      - resticVolumeBackupCreated
                      - sourceVolumeSnapshot
                      - volumeSnapshotContentCopyName
                      - volumeSnapshotCopied
                      - volumeSnapshotCopyDeleted
                      - volumeSnapshotCopyName
                      - volumeSnapshotCopyReadyToUse
                      type: object
                    type: array
                type: object
              sourceSnapshotName:
                description: Name of the snapshot to used for this backup (will be
                  either the SnapshotRef if provided in the Backup spec, or a temporary
                  snapshot name if SnapshotRef was not provided)
                type: string
              state:
                description: State indicates a high level summary of the Backup's
                  state
                type: string
            required:
            - conditions
            - progress
            - state
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
