---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: resourcedeletes.astra.netapp.io
spec:
  group: astra.netapp.io
  names:
    kind: ResourceDelete
    listKind: ResourceDeleteList
    plural: resourcedeletes
    singular: resourcedelete
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: ResourceDelete is the Schema for the resourcedeletes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ResourceDeleteSpec defines the desired state of ResourceDelete
            properties:
              appArchivePath:
                description: AppArchivePath is the path inside AppVault where the
                  contents of this collection will be read from.
                type: string
              appVaultRef:
                description: AppVaultRef is the reference to the AppVault where the
                  snapshot contents will be read from.
                type: string
              exclusionResourceList:
                description: ExclusionResourceList is an optional list of objects
                  to exclude from being deleted.
                items:
                  description: GroupKind defines a kubernetes object
                  properties:
                    group:
                      description: Group is the server time when the ResourceDelete
                        is completed.
                      type: string
                    kind:
                      description: Kind
                      type: string
                  required:
                  - group
                  - kind
                  type: object
                type: array
              resourceFilter:
                description: ResourceFilter should be populated by the user if only
                  certain resources must be restored in the target namespace
                properties:
                  resourceMatchers:
                    description: ResourceMatchers is a list of matchers where each
                      matcher matches one or more resources
                    items:
                      properties:
                        group:
                          description: Group of the kubernetes resource that has to
                            be matched
                          type: string
                        kind:
                          description: Kind of the kubernetes resource that has to
                            be matched
                          type: string
                        labelSelectors:
                          description: LabelSelectors  is used to match resource(s)
                            based on the metadata.labels field of the kubernetes resource
                          items:
                            type: string
                          type: array
                        names:
                          description: Names kubernetes metadata.name field of the
                            resource(s) that must be matched.
                          items:
                            type: string
                          type: array
                        namespaces:
                          description: Namespaces kubernetes metadata.namespace field
                            of the resource(s) that must be matched.
                          items:
                            type: string
                          type: array
                        version:
                          description: Version of the kubernetes resource that has
                            to be matched.
                          type: string
                      type: object
                    type: array
                  resourceSelectionCriteria:
                    description: ResourceSelectionCriteria used to determine if the
                      resources matching the provided resources matchers should be
                      included into the collection or excluded from the collection.
                    enum:
                    - include
                    - exclude
                    type: string
                type: object
            type: object
          status:
            description: ResourceDeleteStatus defines the observed state of ResourceDelete
            properties:
              completionTimestamp:
                description: CompletionTimestamp is the server time when the ResourceDelete
                  is completed.
                format: date-time
                nullable: true
                type: string
              conditions:
                description: Condition contains details for one aspect of the current
                  state of this ResourceDelete resource
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    \n type FooStatus struct{ // Represents the observations of a
                    foo's current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
