// Code generated by mockery v2.19.0. DO NOT EDIT.

package mocks

import (
	context "context"

	client "sigs.k8s.io/controller-runtime/pkg/client"

	mock "github.com/stretchr/testify/mock"
)

// K8sUtilInterface is an autogenerated mock type for the K8sUtilInterface type
type K8sUtilInterface struct {
	mock.Mock
}

// CreateOrUpdateResource provides a mock function with given fields: _a0, _a1, _a2
func (_m *K8sUtilInterface) CreateOrUpdateResource(_a0 context.Context, _a1 client.Object, _a2 client.Object) error {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, client.Object, client.Object) error); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VersionGet provides a mock function with given fields:
func (_m *K8sUtilInterface) VersionGet() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewK8sUtilInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewK8sUtilInterface creates a new instance of K8sUtilInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewK8sUtilInterface(t mockConstructorTestingTNewK8sUtilInterface) *K8sUtilInterface {
	mock := &K8sUtilInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
