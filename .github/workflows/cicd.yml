name: CICD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: '*'
  workflow_dispatch:
    branches: '*'

jobs:
  build_and_test:
    name: CICD
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Build Images
        run: |
          BASE_VERSION=$(cat version.txt)
          export VERSION=$BASE_VERSION.$(date -u '+%Y%m%d%H%M')
          echo $BASE_VERSION
          echo $VERSION
          echo $VERSION > VERSION
          make docker-build

      - name: Deploy to DockerHub
        if: github.ref == 'refs/heads/master'
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          export VERSION=$(cat VERSION)
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
          make docker-push

      - name: Update the operator image tag
        if: github.ref == 'refs/heads/master'
        run: |
          export VERSION=$(cat VERSION)
          make generate-operator-yaml
          git config --global user.name ${{ secrets.ACTIONS_USER }}
          git config --global user.email ${{ secrets.ACTIONS_EMAIL }}
          git diff astraconnector_operator.yaml
          git add astraconnector_operator.yaml
          git commit -m "Auto updating the operator image tag" -n
          git push --set-upstream origin master

      - name: Build Install Bundle
        if: github.ref == 'refs/heads/master'
        run: |
          export VERSION=$(cat VERSION)
          make install-bundle

      - name: Get Version
        if: github.ref == 'refs/heads/master'
        id: vars
        run:
          echo ::set-output name=version::$(cat VERSION)

      - name: Create Release
        if: github.ref == 'refs/heads/master'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_VERSION: "v${{ steps.vars.outputs.version }}"
        with:
          tag_name: ${{ env.TAG_VERSION }}
          release_name: Release ${{ env.TAG_VERSION }}
          draft: false
          prerelease: false

      - name: Upload Release Image Bundle
        if: github.ref == 'refs/heads/master'
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAR_PATH: "./build/astra-connector-${{ steps.vars.outputs.version }}.tgz"
          ASSET_NAME: "install-bundle-${{ steps.vars.outputs.version }}.tgz"
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing its ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
          asset_path: ${{ env.TAR_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: application/x-tar

