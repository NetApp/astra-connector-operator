name: CICD

on:
  push:
    branches:
      - 'release-*'
  pull_request:
    branches: '*'
  workflow_dispatch:
    branches: '*'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.19

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...
          if [ -f Gopkg.toml ]; then
              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
              dep ensure
          fi

      - name: Get the version (release branch)
        if: ${{ startsWith(github.ref, 'refs/heads/release-') }}
        run: |
          export BASE_VERSION=$(cat version.txt)
          export VERSION=$BASE_VERSION-$(date +'%Y%m%d%H%M')
          echo $VERSION > VERSION

      - name: Build Images
        run: |
          export VERSION=$(cat VERSION)
          echo $VERSION
          make docker-build

      - name: Push to DockerHub
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_PASSWORD }}
        run: |
          export VERSION=$(cat VERSION)
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_PASSWORD
          make docker-push

      - name: Build Install YAMLs
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        run: |
          export VERSION=$(cat VERSION)
          make release

      - name: Build default-image manifest file
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        run: |
          export VERSION=$(cat VERSION)
          export MANIFEST_FILENAME=default-images-$VERSION.manifest
          export MANIFEST_FILEPATH=./$MANIFEST_FILENAME
          echo "MANIFEST_FILEPATH=$MANIFEST_FILEPATH" >> $GITHUB_ENV
          echo "MANIFEST_FILENAME=$MANIFEST_FILENAME" >> $GITHUB_ENV
          go run scripts/create_default_images_manifest.go $MANIFEST_FILEPATH
          cat $MANIFEST_FILEPATH

      - name: Get Version
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        id: vars
        run:
          echo ::set-output name=version::$(cat VERSION)

      - name: Create Release
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TAG_VERSION: "${{ steps.vars.outputs.version }}"
        with:
          tag_name: ${{ env.TAG_VERSION }}
          release_name: Release ${{ env.TAG_VERSION }}
          draft: false
          prerelease: false

      - name: Upload astraconnector yaml
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        id: upload-astraconnector-yaml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_PATH: "./build/astra_v1_astraconnector.yaml"
          ASSET_NAME: "astra_v1_astraconnector.yaml"
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: text/yaml

      - name: Upload default-image manifest
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        id: upload-manifest
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_PATH: ${{ env.MANIFEST_FILEPATH }}
          ASSET_NAME: ${{ env.MANIFEST_FILENAME }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: text/plain

      - name: Upload astraconnector_operator.yaml
        if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-') }}
        id: upload-astraconnector-operator-yaml
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FILE_PATH: "./build/astraconnector_operator.yaml"
          ASSET_NAME: "astraconnector_operator.yaml"
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.FILE_PATH }}
          asset_name: ${{ env.ASSET_NAME }}
          asset_content_type: text/yaml
