apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: applications.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: Application
    listKind: ApplicationList
    plural: applications
    singular: application
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Application is the Schema for the applications API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ApplicationSpec defines the desired state of Application
              properties:
                includedNamespaces:
                  description: IncludedNamespaces is a slice of namespace names to include in our app definition. If empty, all namespaces are included.
                  items:
                    type: string
                  nullable: true
                  type: array
              type: object
            status:
              description: ApplicationStatus defines the observed state of Application
              properties:
                collectionTimestamp:
                  description: CollectionTimestamp records the time a backup was completed. Collection time is recorded even on failed backups. Collection time is recorded before uploading the backup object. The server's time is used for CollectionTimestamps
                  format: date-time
                  nullable: true
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: backuplocations.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: BackupLocation
    listKind: BackupLocationList
    plural: backuplocations
    singular: backuplocation
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: BackupLocation is the Schema for the backuplocations API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BackupLocationSpec defines the desired state of BackupLocation
              properties:
                foo:
                  description: Foo is an example field of BackupLocation. Edit backuplocation_types.go to remove/update
                  type: string
              type: object
            status:
              description: BackupLocationStatus defines the observed state of BackupLocation
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: backups.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: Backup
    listKind: BackupList
    plural: backups
    singular: backup
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Backup is the Schema for the backups API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: BackupSpec defines the desired state of Backup
              properties:
                foo:
                  description: Foo is an example field of Backup. Edit backup_types.go to remove/update
                  type: string
              type: object
            status:
              description: BackupStatus defines the observed state of Backup
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: collections.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: Collection
    listKind: CollectionList
    plural: collections
    singular: collection
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Collection is the Schema for the collections API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: CollectionSpec defines the desired state of Collection
              properties:
                applicationRef:
                  description: ApplicationRef is the unique name of the application this collection is for.
                  type: string
                backupLocationPath:
                  description: 'BackupLocationPath is the path inside BackupLocation where the contents of this collection will go. ToDo: make this field optional and add a mutating webhook that generates this path using app name and timestamp if not provided by the user backupLocationPath = fmt.Sprintf("/%s_%s/collections/%s_%s", application.ObjectMeta.Name, application.ObjectMeta.UID, now, collection.ObjectMeta.UID)'
                  type: string
                backupLocationRef:
                  description: BackupLocationRef is the reference to the BackupLocation where the snapshot contents will go.
                  type: string
              type: object
            status:
              description: CollectionStatus defines the observed state of Collection
              properties:
                collectionTimestamp:
                  description: CompletionTimestamp is the server time when the collection was completed.
                  format: date-time
                  nullable: true
                  type: string
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: exechooks.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: ExecHook
    listKind: ExecHookList
    plural: exechooks
    singular: exechook
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ExecHook is the Schema for the exechooks API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ExecHookSpec defines the desired state of ExecHook
              properties:
                foo:
                  description: Foo is an example field of ExecHook. Edit exechook_types.go to remove/update
                  type: string
              type: object
            status:
              description: ExecHookStatus defines the observed state of ExecHook
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: policies.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: Policy
    listKind: PolicyList
    plural: policies
    singular: policy
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Policy is the Schema for the policies API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: PolicySpec defines the desired state of Policy
              properties:
                foo:
                  description: Foo is an example field of Policy. Edit policy_types.go to remove/update
                  type: string
              type: object
            status:
              description: PolicyStatus defines the observed state of Policy
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: resticvolumebackups.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: ResticVolumeBackup
    listKind: ResticVolumeBackupList
    plural: resticvolumebackups
    singular: resticvolumebackup
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: ResticVolumeBackup is the Schema for the resticvolumebackups API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ResticVolumeBackupSpec defines the desired state of ResticVolumeBackup
              properties:
                clonePVC:
                  description: Config for the temporary clone PVC that will be created to access the snapshot contents (if dataSource is a VolumeSnapshot)
                  properties:
                    metadata:
                      properties:
                        annotations:
                          additionalProperties:
                            type: string
                          type: object
                        labels:
                          additionalProperties:
                            type: string
                          type: object
                      type: object
                    spec:
                      properties:
                        accessModes:
                          items:
                            type: string
                          type: array
                        resources:
                          properties:
                            limits:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: ResourceList is a set of (resource name, quantity) pairs.
                              type: object
                            requests:
                              additionalProperties:
                                anyOf:
                                  - type: integer
                                  - type: string
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              description: ResourceList is a set of (resource name, quantity) pairs.
                              type: object
                          type: object
                        storageClassName:
                          type: string
                      type: object
                  type: object
                dataSourceRef:
                  description: Reference to the PVC or VolumeSnapshot to use as the source of the backup
                  properties:
                    apiGroup:
                      description: APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
                      type: string
                    kind:
                      description: Kind is the type of resource being referenced
                      type: string
                    name:
                      description: Name is the name of resource being referenced
                      type: string
                  required:
                    - kind
                    - name
                  type: object
                  x-kubernetes-map-type: atomic
                resticEnv:
                  description: Env vars to be provided to the restic CLI (including any required credentials)
                  items:
                    description: EnvVar represents an environment variable present in a Container.
                    properties:
                      name:
                        description: Name of the environment variable. Must be a C_IDENTIFIER.
                        type: string
                      value:
                        description: 'Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. "$$(VAR_NAME)" will produce the string literal "$(VAR_NAME)". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".'
                        type: string
                      valueFrom:
                        description: Source for the environment variable's value. Cannot be used if value is not empty.
                        properties:
                          configMapKeyRef:
                            description: Selects a key of a ConfigMap.
                            properties:
                              key:
                                description: The key to select.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the ConfigMap or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                          fieldRef:
                            description: 'Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels[''<KEY>'']`, `metadata.annotations[''<KEY>'']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.'
                            properties:
                              apiVersion:
                                description: Version of the schema the FieldPath is written in terms of, defaults to "v1".
                                type: string
                              fieldPath:
                                description: Path of the field to select in the specified API version.
                                type: string
                            required:
                              - fieldPath
                            type: object
                            x-kubernetes-map-type: atomic
                          resourceFieldRef:
                            description: 'Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.'
                            properties:
                              containerName:
                                description: 'Container name: required for volumes, optional for env vars'
                                type: string
                              divisor:
                                anyOf:
                                  - type: integer
                                  - type: string
                                description: Specifies the output format of the exposed resources, defaults to "1"
                                pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
                                x-kubernetes-int-or-string: true
                              resource:
                                description: 'Required: resource to select'
                                type: string
                            required:
                              - resource
                            type: object
                            x-kubernetes-map-type: atomic
                          secretKeyRef:
                            description: Selects a key of a secret in the pod's namespace
                            properties:
                              key:
                                description: The key of the secret to select from.  Must be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?'
                                type: string
                              optional:
                                description: Specify whether the Secret or its key must be defined
                                type: boolean
                            required:
                              - key
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                    required:
                      - name
                    type: object
                  type: array
                resticRepository:
                  description: Restic repository location (specified in the same format as the "-r" option of the restic CLI)
                  type: string
              required:
                - dataSourceRef
                - resticEnv
                - resticRepository
              type: object
            status:
              description: ResticVolumeBackupStatus defines the observed state of ResticVolumeBackup
              properties:
                clonePVCName:
                  description: Name of the temporary clone PVC created for Restic to copy from
                  type: string
                clonePvcCleanedUp:
                  description: Indicates whether the temporary clone has been cleaned up
                  type: boolean
                resticJobCleanedUp:
                  description: Indicates whether the Restic job has been cleaned up
                  type: boolean
                resticJobName:
                  description: Name of the Job created to run Restic
                  type: string
                resticPVCName:
                  description: Name of the PVC for Restic to copy from. Will be the clone PVC if dataSourceRef is a snapshot, or source PVC if dataSourceRef is a PVC
                  type: string
                resticSnapshotID:
                  description: ID of the Restic snapshot created to represent this backup
                  type: string
              required:
                - resticJobCleanedUp
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: restores.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: Restore
    listKind: RestoreList
    plural: restores
    singular: restore
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Restore is the Schema for the restores API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: RestoreSpec defines the desired state of Restore
              properties:
                foo:
                  description: Foo is an example field of Restore. Edit restore_types.go to remove/update
                  type: string
              type: object
            status:
              description: RestoreStatus defines the observed state of Restore
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.11.1
  creationTimestamp: null
  name: snapshots.management.astra.netapp.io
spec:
  group: management.astra.netapp.io
  names:
    kind: Snapshot
    listKind: SnapshotList
    plural: snapshots
    singular: snapshot
  scope: Namespaced
  versions:
    - name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Snapshot is the Schema for the snapshots API
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: SnapshotSpec defines the desired state of Snapshot
              properties:
                foo:
                  description: Foo is an example field of Snapshot. Edit snapshot_types.go to remove/update
                  type: string
              type: object
            status:
              description: SnapshotStatus defines the observed state of Snapshot
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
